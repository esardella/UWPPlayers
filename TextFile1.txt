concurrency::create_task(file->OpenAsync(FileAccessMode::Read)).then([file](IRandomAccessStream^ stream)
			{
				auto dataReader = ref new Windows::Storage::Streams::DataReader(stream);
				auto fileSize = stream->Size;
				auto task = concurrency::create_task(dataReader->LoadAsync(10000));
				task.wait();
				auto nBytesRead = task.get();
			});



 catch (Platform::COMException^ e)
        {
            //Example output: The system cannot find the specified file.
            OutputDebugString(e->Message->Data());
        }



		task<void> SampleDecodeUWP::MainPage::LoadSource()
{

	auto picker = ref new FileOpenPicker();
	picker->FileTypeFilter->Append(L".h264");
	picker->SuggestedStartLocation = PickerLocationId::ComputerFolder;

	auto file = co_await picker->PickSingleFileAsync();
	if (nullptr == file)
		return;

	auto stream = co_await file->OpenReadAsync();
	auto dataReader = ref new Windows::Storage::Streams::DataReader(stream);
	auto filesize = stream->Size;
	auto nBytesRead = co_await dataReader->LoadAsync(stream->Size);
	auto str = nBytesRead.ToString();

}